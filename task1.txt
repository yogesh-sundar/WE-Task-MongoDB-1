1. Find all the information about each products

db.productDetails.find();

2. Find the product price which are between 400 to 800

db.productDetails.find({$and:[{product_price:{$gt:400}}, {product_price:{$lt:800}}]});

3. Find the product price which are not between 400 to 600

db.productDetails.find({$or:[{product_price:{$lte:400}}, {product_price:{$gte:600}}]});

4. List the four product which are grater than 500 in price

db.productDetails.find({product_price:{$gt:500}}).limit(4);

5. Find the product name and product material of each products

db.productDetails.aggregate({$project:{product_name:1, product_material:1}});

6. Find the product with a row id of 10

db.productDetails.find({id:"10"});

7. Find only the product name and product material

db.productDetails.find({}, {product_name:1, product_material:1});

8. Find all products which contain the value of soft in product material

db.productDetails.find({product_material:"Soft"});

9. Find products which contain product color indigo  and product price 492.00

db.productDetails.find({$or:[{product_color:"indigo"}, {product_price:492}]});

10. Delete the products which product price value are same

db.productDetails.aggregate( [
  { 
      $group: { 
          _id: { price: "$product_price"},
          all_ids: { $addToSet: "$_id" }
      } 
  },
  { 
      $project: {
          dup_ids: { $slice: [ "$all_ids", 1, 9999999 ] },
          _id: 0
       }
  }
] ).forEach( (doc) => db.productDetails.deleteMany( { _id: { $in: doc.dup_ids } } ) )
